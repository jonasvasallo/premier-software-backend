// <auto-generated />
using System;
using InventoryWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventoryWebApp.Migrations
{
    [DbContext(typeof(InventoryDBContext))]
    [Migration("20250906133430_added selling price field to sales")]
    partial class addedsellingpricefieldtosales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventoryWebApp.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 6, 13, 34, 28, 167, DateTimeKind.Utc).AddTicks(5958),
                            Description = "High performance laptop for developers",
                            Name = "Laptop",
                            Price = 1200.00m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 6, 13, 34, 28, 167, DateTimeKind.Utc).AddTicks(6841),
                            Description = "Latest generation flagship smartphone",
                            Name = "Smartphone",
                            Price = 800.00m,
                            Stock = 25
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 6, 13, 34, 28, 167, DateTimeKind.Utc).AddTicks(6843),
                            Description = "Noise-cancelling over-ear headphones",
                            Name = "Headphones",
                            Price = 199.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 6, 13, 34, 28, 167, DateTimeKind.Utc).AddTicks(6844),
                            Description = "RGB backlit mechanical keyboard with blue switches",
                            Name = "Mechanical Keyboard",
                            Price = 150.00m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 6, 13, 34, 28, 167, DateTimeKind.Utc).AddTicks(6845),
                            Description = "High DPI wireless gaming mouse",
                            Name = "Gaming Mouse",
                            Price = 89.99m,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("InventoryWebApp.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UnitsSold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ItemId = 1,
                            PurchaseDate = new DateTime(2025, 8, 27, 13, 34, 28, 168, DateTimeKind.Utc).AddTicks(1494),
                            SellingPrice = 0m,
                            UnitsSold = 2
                        },
                        new
                        {
                            Id = 2,
                            ItemId = 2,
                            PurchaseDate = new DateTime(2025, 8, 29, 13, 34, 28, 168, DateTimeKind.Utc).AddTicks(2378),
                            SellingPrice = 0m,
                            UnitsSold = 1
                        },
                        new
                        {
                            Id = 3,
                            ItemId = 3,
                            PurchaseDate = new DateTime(2025, 9, 1, 13, 34, 28, 168, DateTimeKind.Utc).AddTicks(2384),
                            SellingPrice = 0m,
                            UnitsSold = 3
                        },
                        new
                        {
                            Id = 4,
                            ItemId = 4,
                            PurchaseDate = new DateTime(2025, 9, 3, 13, 34, 28, 168, DateTimeKind.Utc).AddTicks(2385),
                            SellingPrice = 0m,
                            UnitsSold = 1
                        },
                        new
                        {
                            Id = 5,
                            ItemId = 5,
                            PurchaseDate = new DateTime(2025, 9, 5, 13, 34, 28, 168, DateTimeKind.Utc).AddTicks(2386),
                            SellingPrice = 0m,
                            UnitsSold = 4
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
